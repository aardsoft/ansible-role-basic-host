#jinja2: lstrip_blocks: True
# {{ ansible_managed }}
{% if sshd is undefined %}
{% set sshd = {} %}
{% endif %}
# What ports, IPs and protocols we listen for
Port {{sshd.port|default(22)}}
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
Protocol {{sshd.protocol|default(2)}}

{# Some distributions no longer generate all host keys, but openssh #}
{# without HostKey directive tries to include all, leading to silly #}
{# warnings in the log files.                                       #}
{# The basic_host role creates a list of host keys available on the #}
{# system before calling this template, which is used to create a   #}
{# bunch of HostKey directives matching the system. If this is ever #}
{# run against a host without SSHd running yet (unlikely) no config #}
{# is created, which only leads to warnings until next ansible run. #}
{% if ssh_host_keys is defined and ssh_host_keys.matched > 0 %}
  {% for host_key in ssh_host_keys.files %}
HostKey {{host_key.path}}
  {% endfor %}
{% endif %}

# Lifetime and size of ephemeral version 1 server key
#KeyRegenerationInterval 3600
#ServerKeyBits 1024

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:
LoginGraceTime 120
{% if sshd.root_login is defined and ssh_root_login is undefined %}
{% set ssh_root_login = sshd.root_login %}
{% endif %}
PermitRootLogin {{ssh_root_login|default("no")}}
StrictModes {{sshd.strict_modes|default('yes')}}

PubkeyAuthentication yes
#AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
{% if sshd.password_auth is defined and ssh_password_auth is undefined %}
{% set ssh_password_auth = sshd.password_auth %}
{% endif %}
PasswordAuthentication {{ ssh_password_auth | default("no")}}

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

X11Forwarding {{sshd.x11_forwarding|default('yes')}}
X11DisplayOffset {{sshd.x11_display_offset|default(10)}}
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

{% if sshd.sftp_binary is defined %}
Subsystem sftp {{sshd.sftp_binary}}
{% elif ansible_os_family == "RedHat" %}
Subsystem sftp /usr/libexec/openssh/sftp-server
{% elif ansible_os_family == "Suse" %}
Subsystem sftp /usr/lib/openssh/sftp-server
{% endif %}

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

{% if sshd_config_addition is defined %}
  {% for entry in sshd_config_addition.entries %}
{{entry}}
  {% endfor %}
{% endif %}
