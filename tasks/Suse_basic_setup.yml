# this is the part of the suse specific setup that needs to be able to run via
# delegates as well.
# When editing this be careful about weird ansible behaviour on delegates:
# - delegation with delegate_facts set will correctly store the facts in
#   the delegated to host
# - variable expansion surprisingly takes place on the inventory host
# - there is no variable specifying the host things were delegated to
# To work around this, roles including this via delegation are expected to set
# a `delegate_hostname' variable. Instead of directly accessing variables the
# correct form is hostvars[delegate_hostname|default(inventory_hostname)].var

- name: check target host architecture
  set_fact:
    _target_suse_arch: "{{hostvars[delegate_hostname|default(inventory_hostname)].ansible_architecture|default('x86_64')}}"
  tags:
    - access_setup

# additional architectures in main repos are:
# - i586 dead and unsupported
# - ppc64le unlikely to be relevant for us
# - s390x unlikely to be relevant for us
- include_tasks: Suse_port_setup.yml
  when: >
    _target_suse_arch != "x86_64" and
    _target_suse_arch != "aarch64"
  tags:
    - access_setup

- name: use os_release as suse release ({{delegate_hostname|default(inventory_hostname)}})
  set_fact:
    suse_release: "{{hostvars[delegate_hostname|default(inventory_hostname)].os_release|float}}"
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release is undefined and
    hostvars[delegate_hostname|default(inventory_hostname)].os_release is defined and
    hostvars[delegate_hostname|default(inventory_hostname)].os_release != "tumbleweed"
  tags:
    - access_setup

- name: use os_release as suse release (tumbleweed)
  set_fact:
    suse_release: tumbleweed
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release is undefined and
    hostvars[delegate_hostname|default(inventory_hostname)].os_release is defined and
    (hostvars[delegate_hostname|default(inventory_hostname)].os_release == "tumbleweed" or
    hostvars[delegate_hostname|default(inventory_hostname)].os_release == "factory")
  tags:
    - access_setup

- name: set suse release
  set_fact:
    suse_release: 15.3
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release is undefined
  tags:
    - access_setup

- name: set core repo list
  set_fact:
    suse_core_repos:
      - oss
      - non-oss
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_core_repos is undefined and
    suse_port is undefined
  tags:
    - access_setup

- name: set core repo list
  set_fact:
    suse_core_repos:
      - oss
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_core_repos is undefined and
    suse_port is defined
  tags:
    - access_setup

- name: set update repo list
  set_fact:
    suse_update_repos: "{{suse_core_repos}}"
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_update_repos is undefined
  tags:
    - access_setup

- name: add additional update repos
  set_fact:
    suse_update_repos: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_update_repos + [ 'backports', 'sle' ]}}"
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_update_repos is defined and
    suse_port is undefined and
    suse_release|float >= 15.3
  tags:
    - access_setup

- debug:
    msg:
      - "Hostname: {{delegate_hostname|default(inventory_hostname)}}"
      - "Base URL: {{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url}}"
      - "Target machine architecture: {{_target_suse_arch}}"
      - "Port: {{suse_port|default('')}}"
  tags:
    - access_setup

- name: set suse base URLs
  set_fact:
    suse_base_url: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url|default('http://download.opensuse.org/')}}"
    suse_base_url_obs: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url_obs|default('http://download.opensuse.org/')}}"
  tags:
    - access_setup

- name: set port specific update/distribution path
  set_fact:
    suse_update_path: "ports/update"
    suse_dist_path: "ports/{{suse_port}}/distribution"
  when: >
    suse_port is defined and suse_release != "tumbleweed"
  tags:
    - access_setup

- name: set port specific update/distribution path
  set_fact:
    suse_update_path: "ports/update"
    suse_dist_path: "ports/{{suse_port}}"
  when: >
    suse_port is defined and suse_release == "tumbleweed"
  tags:
    - access_setup

- name: set suse release
  set_fact:
    suse_release: tumbleweed
    dist_base: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url}}/{{suse_dist_path|default('')}}"
    obs_base: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url_obs}}/repositories/"
    suse_long_release: openSUSE_Tumbleweed
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release == "tumbleweed"
  tags:
    - access_setup

# ansible silently converts "42.2" to float, so string match doesn't work here
- name: handle leap release naming ({{hostvars[delegate_hostname|default(inventory_hostname)].suse_release}})
  set_fact:
    suse_long_release: openSUSE_Leap_{{ hostvars[delegate_hostname|default(inventory_hostname)].suse_release }}
    dist_base: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url}}/{{suse_dist_path|default('distribution')}}/leap/"
    obs_base: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url_obs}}/repositories/"
    update_url: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url}}/{{suse_update_path|default('update')}}/leap/{{ hostvars[delegate_hostname|default(inventory_hostname)].suse_release }}"
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release|float >= 15 and
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release|float <= 43
  tags:
    - access_setup

- name: set suse longrelease ({{hostvars[delegate_hostname|default(inventory_hostname)].suse_release}})
  set_fact:
    suse_long_release: openSUSE_{{ hostvars[delegate_hostname|default(inventory_hostname)].suse_release }}
    dist_base: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url}}/{{suse_dist_path|default('distribution')}}/"
    obs_base: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_base_url_obs}}/repositories/"
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release is defined and
    hostvars[delegate_hostname|default(inventory_hostname)].suse_long_release is undefined
  tags:
    - access_setup

- name: set base URL
  set_fact:
    dist_base=http://download.opensuse.org/{{suse_dist_path|default('distribution')}}/
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release != "tumbleweed" and
    hostvars[delegate_hostname|default(inventory_hostname)].dist_base is undefined
  tags:
    - access_setup

- name: override update URL
  set_fact:
    update_url: "{{suse_update_url_prefix}}/{{suse_update_path|default('update')}}/leap/{{hostvars[delegate_hostname|default(inventory_hostname)].suse_release}}"
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release|float >= 15 and
    hostvars[delegate_hostname|default(inventory_hostname)].suse_release|float <= 43 and
    suse_update_url_prefix is defined
  tags:
    - access_setup

# this uses the global proxy_host as probably the template would need adjustments as well
- name: configure system proxy
  template:
    src: proxy.j2
    dest: /etc/sysconfig/proxy
    owner: root
    mode: 0755
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].proxy_host is defined and
    hostvars[delegate_hostname|default(inventory_hostname)].skip_proxy is undefined
  tags:
    - access_setup

- name: install zypper config
  copy:
    src: "{{ __zypper_conf }}"
    dest: /etc/zypp/{{ __zypper_conf }}
    owner: root
    group: root
    mode: 0644
  with_items:
    - zypp.conf
    - zypper.conf
  loop_control:
    loop_var: __zypper_conf
  tags:
    - access_setup

- name: set basic packages
  set_fact:
    bare_metal_packages:
      - bridge-utils
      - dmidecode
      - hdparm
      - ipmitool
      - lvm2
      - nmap
      - ntp
      - parted
      - sensors
      - smartmontools
      - tcpdump
      - vlan
    base_packages:
      - bind-utils
      - ca-certificates
      - ca-certificates-mozilla
      - curl
      - glibc-locale
      - iotop
      - iperf
      - iproute2
      - less
      - lsof
      - fuse
      - net-tools
      - screen
      - strace
      - sudo
      - sysstat
      - timezone
      - vim
      - wget
      - which
      - mc
  when: >
    (delegate_hostame is undefined and hostvars[inventory_hostname].base_packages is undefined) or
    (delegate_hostname is defined and hostvars[delegate_hostname].base_packages is undefined)
  tags:
    - access_setup

- name: add python-xml for non-tumbleweed hosts
  set_fact:
    base_packages: "{{ base_packages + [ 'python-xml' ] }}"
  when: >
    suse_release != "tumbleweed"
  tags:
    - access_setup

- debug:
    msg:
      - "Step 2:"
      - "{{hostvars[delegate_hostname].base_packages}}"
  when: >
    debug_delegates is defined and
    delegate_hostname is defined

- name: add MicroOS packages
  set_fact:
    base_packages: "{{ hostvars[delegate_hostname|default(inventory_hostname)].base_packages + [ 'systemd-network' ] }}"
  when: >
    ansible_os_family == "openSUSE MicroOS"
  tags:
    - access_setup

- name: add podman
  set_fact:
    bare_metal_packages: "{{ bare_metal_packages + [ 'podman' ] }}"
  when: >
    ansible_virtualization_role == "host" or
    ansible_virtualization_role == "NA" and
    use_podman is defined and use_podman == True
  tags:
    - access_setup

# using just base_packages here would pull in base_packages from the host
# delegated from, overriding our new assignments - and break if that host
# adds extra packages not available in the delegated to repositories
- name: add wireguard
  set_fact:
    base_packages: "{{ hostvars[delegate_hostname|default(inventory_hostname)].base_packages + [ 'wireguard-tools' ] }}"
  when: >
    hostvars[delegate_hostname|default(inventory_hostname)].wireguard is defined
  tags:
    - access_setup

- name: locate repo files (provisioning)
  find:
    paths: /etc/zypp/repos.d/
    patterns: "*.repo"
    recurse: no
    file_type: file
  register: find_result
  when: >
    marker.stat.exists == True

- name: remove repo files (provisioning)
  file:
    state: absent
    path: "{{ __repo_file.path }}"
  with_items: "{{ find_result.files }}"
  loop_control:
    loop_var: __repo_file
  when: >
    marker.stat.exists == True

# suse 15.3 adds repo files via the openSUSE-release packages, which leads to
# errors when the default download URL is not reachable. We're using a different
# repo naming scheme, so no repos with that name should exist - which doesn't
# mask them. Removing them would just bring them back on dist upgrade -> just
# disable those repos, ignoring errors. This can't be handled with the builtin
# zypper module as we don't care about how the repo is configured, just that it
# is disabled.
- name: "disable core repos packaged by suse"
  shell: zypper mr -d "{{__repo}}"
  loop_control:
    loop_var: __repo
  ignore_errors: True
  changed_when: false
  with_items:
    - repo-sle-update
    - repo-sle-debug-update
    - repo-backports-update
    - repo-backports-debug-update
  tags:
    - access_setup

# additional repositories are considered not relevant for initial access
# repo_ssl_verify is expected to come via vars, and therefore should be usable
- name: "configure core repos (base: {{hostvars[delegate_hostname|default(inventory_hostname)].dist_base}})"
  zypper_repository:
    name: "repo-{{__repo}}"
    repo: "{{ hostvars[delegate_hostname|default(inventory_hostname)].dist_base }}/{{ hostvars[delegate_hostname|default(inventory_hostname)].suse_release }}/repo/{{__repo}}?ssl_verify={{repo_ssl_verify|default('yes')}}"
    state: present
    auto_import_keys: yes
    overwrite_multiple: yes
  with_items: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_core_repos}}"
  loop_control:
    loop_var: __repo
  tags:
    - access_setup

- name: "configure update repo (update base: {{hostvars[delegate_hostname|default(inventory_hostname)].update_url}})"
  zypper_repository:
    name: "update-{{__repo}}"
    repo: "{{ hostvars[delegate_hostname|default(inventory_hostname)].update_url }}/{{__repo}}?ssl_verify={{repo_ssl_verify|default('yes')}}"
    state: present
    auto_import_keys: yes
    overwrite_multiple: yes
  with_items: "{{hostvars[delegate_hostname|default(inventory_hostname)].suse_update_repos}}"
  loop_control:
    loop_var: __repo
  when: hostvars[delegate_hostname|default(inventory_hostname)].update_url is defined
  tags:
    - access_setup
