- set_fact:
    _wireguard_confdir: /etc/wireguard

- set_fact:
    _wg: wg

- set_fact:
    _wireguard_confdir: "{{homebrew_prefix}}/etc/wireguard"
  when: >
    ansible_os_family == "Darwin"

- set_fact:
    _wg: "{{homebrew_prefix}}/bin/wg"
  when: >
    ansible_os_family == "Darwin"

- name: make sure wireguard configuration directory exists
  ansible.builtin.file:
    path: "{{_wireguard_confdir}}"
    owner: root
    group: "{{_root_group}}"
    mode: 0700
    state: directory

- name: link wireguard configuration on arm macs
  ansible.builtin.file:
    path: "/usr/local/etc"
    owner: root
    group: admin
    mode: 0775
    state: directory
  when: >
    ansible_os_family == "Darwin" and
    ansible_machine == 'arm64'

- name: link wireguard configuration on arm macs
  ansible.builtin.file:
    src: "{{_wireguard_confdir}}"
    dest: "/usr/local/etc/wireguard"
    state: link
    force: True
  when: >
    ansible_os_family == "Darwin" and
    ansible_machine == 'arm64'

- ansible.builtin.include_tasks: _homebrew_packages.yml
  when: >
    ansible_os_family == "Darwin" and
    ansible_version.full is version('2.10', '>=')
  vars:
    homebrew_packages:
      - wireguard-go
      - wireguard-tools

- ansible.builtin.include_tasks: _homebrew_packages_legacy.yml
  when: >
    ansible_os_family == "Darwin" and
    ansible_version.full is version('2.9', '>=') and
    ansible_version.full is version('2.10', '<')
  vars:
    homebrew_packages:
      - wireguard-go
      - wireguard-tools

- stat:
    path: "{{wireguard[_iface.key].interface.private_key_file}}"
  register: _wireguard_private_key_file
  when: wireguard[_iface.key].interface.private_key_file is defined
  tags:
    - access_setup

- stat:
    path: "{{wireguard[_iface.key].interface.public_key_file}}"
  register: _wireguard_public_key_file
  when: wireguard[_iface.key].interface.public_key_file is defined
  tags:
    - access_setup

- name: copy wireguard private key from passdb
  ansible.builtin.template:
    src: wireguard_key.j2
    dest: "{{wireguard[_iface.key].interface.private_key_file}}"
    owner: root
    group: root
    mode: 0600
  register: _wg_key_copy
  when: >
    wireguard[_iface.key].interface.private_key_file is defined and
    wireguard[_iface.key].interface.passdb_entry is defined

- name: create wireguard private key
  shell: "{{_wg}} genkey > {{wireguard[_iface.key].interface.private_key_file}}"
  when: >
    wireguard[_iface.key].interface.private_key_file is defined and
    _wireguard_private_key_file.stat.exists == False
  register: _wg_key_create
  tags:
    - access_setup

- name: adjust wireguard private key permissions
  file:
    path: "{{wireguard[_iface.key].interface.private_key_file}}"
    owner: root
    mode: 0600
  when: >
    wireguard[_iface.key].interface.private_key_file is defined
  tags:
    - access_setup

# TODO: this should also get recreated if the private key changes in one of the two steps above
- name: create wireguard public key
  shell: "{{_wg}} pubkey < {{wireguard[_iface.key].interface.private_key_file}} > {{wireguard[_iface.key].interface.public_key_file}}"
  when: >
    wireguard[_iface.key].interface.private_key_file is defined and
    wireguard[_iface.key].interface.public_key_file is defined and
    (_wireguard_public_key_file.stat.exists == False or
     (_wg_key_copy is defined and _wg_key_copy is changed) or
     (_wg_key_create is defined and _wg_key_create is changed))
  tags:
    - access_setup

- name: read private key file
  slurp:
    src: "{{wireguard[_iface.key].interface.private_key_file}}"
  when: wireguard[_iface.key].interface.private_key_file is defined
  register: _wg_private_key
  tags:
    - access_setup

- name: configure wireguard interfaces
  template:
   src: wireguard.conf.j2
   dest: "{{_wireguard_confdir}}/{{_iface.key}}.conf"
   mode: 0600
  register: __iface_changed
  tags:
    - access_setup

- name: enable and start wireguard service
  systemd:
    name: "wg-quick@{{_iface.key}}"
    state: restarted
    enabled: yes
  when: >
    ansible_service_mgr == 'systemd' and
    __iface_changed is defined and __iface_changed is changed and
    wireguard[_iface.key].interface.active|default(True) == True
  tags:
    - access_setup