# TODO: add update repo for non-oss?
# TODO: fix zypper.conf recommends

- name: use os_release as suse release
  set_fact:
    suse_release: "{{os_release|float}}"
  when: suse_release is undefined and os_release is defined

- name: set suse release
  set_fact:
    suse_release: 15.0
  when: suse_release is undefined
  tags:
    - access_setup

- name: set core repo list
  set_fact:
    suse_core_repos:
      - oss
      - non-oss
  when: suse_core_repos is undefined
  tags:
    - access_setup

- name: set suse base URLs
  set_fact:
    suse_base_url: "{{suse_base_url|default('http://download.opensuse.org/')}}"
    suse_base_url_obs: "{{suse_base_url_obs|default('http://download.opensuse.org/')}}"
  tags:
    - access_setup

- name: set suse release
  set_fact:
    suse_release: tumbleweed
    dist_base: "{{suse_base_url}}"
    obs_base: "{{suse_base_url_obs}}/repositories/"
    suse_long_release: openSUSE_Tumbleweed
  when: suse_release == "tumbleweed"
  tags:
    - access_setup

# ansible silently converts "42.2" to float, so string match doesn't work here
- name: handle leap release naming ({{suse_release}})
  set_fact:
    suse_long_release: openSUSE_Leap_{{ suse_release }}
    dist_base: "{{suse_base_url}}/distribution/leap/"
    obs_base: "{{suse_base_url_obs}}/repositories/"
    update_url: "{{suse_base_url}}/update/leap/{{ suse_release }}"
  when: suse_release|float >= 15 and suse_release|float <= 43
  tags:
    - access_setup

- name: set suse longrelease ({{suse_release}})
  set_fact:
    suse_long_release: openSUSE_{{ suse_release }}
    dist_base: "{{suse_base_url}}/distribution/"
    obs_base: "{{suse_base_url_obs}}/repositories/"
  when: suse_release is defined and suse_long_release is undefined
  tags:
    - access_setup

- name: set base URL
  set_fact:
    dist_base=http://download.opensuse.org/distribution/
  when: suse_release != "tumbleweed" and dist_base is undefined
  tags:
    - access_setup

- name: override update URL
  set_fact:
    update_url: "{{suse_update_url_prefix}}/update/leap/{{suse_release}}"
  when: >
    suse_release|float >= 15 and suse_release|float <= 43 and
    suse_update_url_prefix is defined
  tags:
    - access_setup

- name: configure system proxy
  template:
    src: proxy.j2
    dest: /etc/sysconfig/proxy
    owner: root
    mode: 0755
  when: proxy_host is defined and skip_proxy is undefined
  tags:
    - access_setup

- name: install zypper config
  copy:
    src: "{{ item }}"
    dest: /etc/zypp/{{ item }}
    owner: root
    group: root
    mode: 0644
  with_items:
    - zypp.conf
    - zypper.conf
  tags:
    - access_setup

# note: deletion of old certificates is currently not supported
- name: install additional CA certificates
  tags:
    - access_setup
  copy:
    src: "{{item}}"
    dest: "/etc/pki/trust/anchors/"
  with_items: "{{ca_certificates|default({})}}"

# this would be better tied to actually changing CA files, but handlers
# only run at the end, which would be too late here. Given that it returns
# very quickly it's not worth the effort to check for changes.
# note: this fails if ca-certificates package is not yet installed
- name: refresh CA trust
  shell: /usr/sbin/update-ca-certificates
  tags:
    - access_setup
  ignore_errors: True
  changed_when: false

- name: set basic packages
  set_fact:
    bare_metal_packages:
      - bridge-utils
      - dmidecode
      - hdparm
      - ipmitool
      - lsof
      - lvm2
      - nmap
      - ntp
      - sensors
      - smartmontools
      - tcpdump
      - vlan
    base_packages:
      - ca-certificates
      - ca-certificates-mozilla
      - curl
      - glibc-locale
      - insserv-compat
      - iotop
      - iperf
      - iproute2
      - less
      - libopenssl1_0_0-hmac
      - fuse
      - net-tools
      - python-xml
      - screen
      - strace
      - sysstat
      - timezone
      - vim
      - wget
  when: base_packages is undefined
  tags:
    - access_setup

- name: expand package list for bare metal servers
  set_fact:
    base_packages: "{{ base_packages + bare_metal_packages }}"
  when: ansible_virtualization_role == "host"
  tags:
    - access_setup

- name: append extra packages
  set_fact:
    base_packages: "{{ base_packages + suse_extra_packages }}"
  when: suse_extra_packages is defined
  tags:
    - access_setup

- name: locate repo files (provisioning)
  find:
    paths: /etc/zypp/repos.d/
    patterns: "*.repo"
    recurse: no
    file_type: file
  register: find_result
  when: marker.stat.exists == True

- name: remove repo files (provisioning)
  file:
    state: absent
    path: "{{ item.path }}"
  with_items: "{{ find_result.files }}"
  when: marker.stat.exists == True

- name: set additional OBS repos
  zypper_repository:
    name: "{{ item }}"
    repo: "{{ obs_base }}/{{ item }}/{{ suse_long_release }}"
    state: present
    auto_import_keys: yes
    overwrite_multiple: yes
  with_items: "{{obs_repos|default({})}}"
  tags:
    - access_setup

- name: configure core repos
  zypper_repository:
    name: "repo-{{ item }}"
    repo: "{{ dist_base }}/{{ suse_release }}/repo/{{ item }}"
    state: present
    auto_import_keys: yes
    overwrite_multiple: yes
  with_items: "{{suse_core_repos}}"
  tags:
    - access_setup

- name: configure update repo
  zypper_repository:
    name: "update-{{ item }}"
    repo: "{{ update_url }}/{{ item }}"
    state: present
    auto_import_keys: yes
    overwrite_multiple: yes
  with_items: "{{suse_core_repos}}"
  when: update_url is defined
  tags:
    - access_setup

# TODO: add support for extra keys:
#       - description
#       - gpgcheck
#       - priority
- name: add additional RPM repositories
  zypper_repository:
    name: "{{ item.key }}"
    repo: "{{ item.value.baseurl }}"
    state: present
    auto_import_keys: yes
    overwrite_multiple: yes
  with_dict: "{{ rpm_repos }}"
  when: rpm_repos is defined
  tags:
    - access_setup

# this should be merged in ansible 2.4, for now we need to carry a
# newer zypper.py
- name: Upgrade the system
  zypper:
    name: '*'
    state: dist-upgrade
  when: skip_updates is undefined or force_updates is defined

- name: Install base packages
  zypper:
    name: "{{ base_packages }}"
    state: present
    update_cache: yes

# in case the first one failed due to missing package, and we got here
# without needing a certificate for a proxy, refresh without masking
# errors to be sure it works.
- name: refresh CA trust (again)
  shell: /usr/sbin/update-ca-certificates
  changed_when: false
  tags:
    - access_setup

- name: stop and mask Wicked services
  systemd:
    name: "{{item}}.service"
    masked: yes
    state: stopped
    force: yes
  when: network_manager is defined and network_manager != "wicked"
  with_items:
    - wicked
    - wickedd-auto4
    - wickedd-dhcp4
    - wickedd-dhcp6
    - wickedd-nanny
    - wickedd
  tags:
    - access_setup

- name: stop and mask getty services for LXC
  systemd:
    name: getty@tty{{item}}.service
    masked: yes
    state: stopped
    force: yes
  when: >
    ansible_virtualization_type is defined and
    ansible_virtualization_type == "lxc"
  with_sequence: start={{lxc_getty_mask_start|default(0)}}  end={{lxc_getty_mask_end|default(4)}}

- name: stop and mask container-getty services for LXC
  systemd:
    name: container-getty@{{item}}.service
    masked: yes
    state: stopped
    force: yes
  when: >
    ansible_virtualization_type is defined and
    ansible_virtualization_type == "lxc"
  with_sequence: start={{container_getty_mask_start|default(0)}}  end={{container_getty_mask_end|default(3)}}
